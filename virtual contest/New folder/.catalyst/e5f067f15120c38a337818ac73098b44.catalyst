{"title":"D. Removing Columns","contestId":"325790","problemIndex":"D","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>You are given an <span class=\"tex-span\"><i>n</i>&#x2009;&#xD7;&#x2009;<i>m</i></span> rectangular table consisting of lower case English letters. In one operation you can completely remove one column from the table. The remaining parts are combined forming a new table. For example, after removing the second column from the table</p><pre class=\"verbatim\"><br>abcd<br>edfg<br>hijk<br></pre><p>&#xA0;</p><p>we obtain the table:</p><pre class=\"verbatim\"><br>acd<br>efg<br>hjk<br></pre><p>&#xA0;</p><p>A table is called <span class=\"tex-font-style-underline\">good</span> if its rows are ordered from top to bottom lexicographically, i.e. each row is lexicographically no larger than the following one. Determine the minimum number of operations of removing a column needed to make a given table good.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains two integers &#xA0;&#x2014; <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>n</i>,&#x2009;<i>m</i>&#x2009;&#x2264;&#x2009;</span><span class=\"tex-font-style-bf\">100</span>).</p><p>Next <span class=\"tex-span\"><i>n</i></span> lines contain <span class=\"tex-span\"><i>m</i></span> small English letters each&#xA0;&#x2014; the characters of the table.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print a single number&#xA0;&#x2014; the minimum number of columns that you need to remove in order to make the table good.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first sample the table is already good.</p><p>In the second sample you may remove the first and third column.</p><p>In the third sample you have to remove all the columns (note that the table where all rows are empty is considered good by definition).</p><p>Let strings <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span> have equal length. Then, <span class=\"tex-span\"><i>s</i></span> is <span class=\"tex-font-style-underline\">lexicographically larger</span> than <span class=\"tex-span\"><i>t</i></span> if they are not equal and the character following the largest common prefix of <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span> (the prefix may be empty) in <span class=\"tex-span\"><i>s</i></span> is alphabetically larger than the corresponding character of <span class=\"tex-span\"><i>t</i></span>.</p>","sampleTestcases":[{"id":1619504001256,"input":"1 10\ncodeforces\n","output":"0\n","result":{"id":1619504001256,"stdout":"c\r\nc\r\nco\r\nco\r\ncod\r\ncod\r\ncode\r\ncode\r\ncodef\r\ncodef\r\ncodefo\r\ncodefo\r\ncodefor\r\ncodefor\r\ncodeforc\r\ncodeforc\r\ncodeforce\r\ncodeforce\r\ncodeforces\r\ncodeforces\r\n0","stderr":"","exitcode":0,"signal":null,"time":49,"timeout":false}},{"id":1619504001257,"input":"4 4\ncase\ncare\ntest\ncode","output":"2\n","result":{"id":1619504001257,"stdout":"c\r\nc\r\nt\r\nc\r\n\r\n\r\n\r\n\r\na\r\na\r\ne\r\no\r\na\r\na\r\ne\r\no\r\nas\r\nar\r\nes\r\nod\r\na\r\na\r\ne\r\no\r\nae\r\nae\r\net\r\noe\r\nae\r\nae\r\net\r\noe\r\n2","stderr":"","exitcode":0,"signal":null,"time":34,"timeout":false}},{"id":1619504001258,"input":"5 4\ncode\nforc\nesco\ndefo\nrces\n","output":"4\n","result":{"id":1619504001258,"stdout":"c\r\nf\r\ne\r\nd\r\nr\r\n\r\n\r\n\r\n\r\n\r\no\r\no\r\ns\r\ne\r\nc\r\n\r\n\r\n\r\n\r\n\r\nd\r\nr\r\nc\r\nf\r\ne\r\n\r\n\r\n\r\n\r\n\r\ne\r\nc\r\no\r\no\r\ns\r\n\r\n\r\n\r\n\r\n\r\n4","stderr":"","exitcode":0,"signal":null,"time":44,"timeout":false}},{"id":1619509641090,"input":"4 4\r\ncase\r\ncate\r\ntest\r\ncode","output":"1","result":{"id":1619509641090,"stdout":"c\r\nc\r\nt\r\nc\r\n\r\n\r\n\r\n\r\na\r\na\r\ne\r\no\r\na\r\na\r\ne\r\no\r\nas\r\nat\r\nes\r\nod\r\nas\r\nat\r\nes\r\nod\r\nase\r\nate\r\nest\r\node\r\nase\r\nate\r\nest\r\node\r\n1","stderr":"","exitcode":0,"signal":null,"time":43,"timeout":false}}],"submitUrl":"https://codeforces.com/group/9i9KeHDFp9/contest/325790/submit","language":"c++","langId":"54"}